no_validation: True

# # # # # # # # # # > > > DEFAULTS < < < # # # # # # # # # #
defaults:
- data: zarr
- dataloader: native_grid
- diagnostics: evaluation
- hardware: example
- graph: multi_scale
- model: transformer
- training: default
- _self_
# # # # # # # # # # < < < DEFAULTS > > > # # # # # # # # # #

# # # # # # # # # # # > > > DATA < < < # # # # # # # # # # #
data:
  frequency: 1d
  timestep: 1d
  forcing:
  - tisr
  - z
  - lsm
  diagnostic: []
  normalizer:
    std: []
    max: []
    residual:
    - 100u
    - 100v
    - 2t
    - msl
    none: []
# # # # # # # # # # # < < < DATA > > > # # # # # # # # # # #

# # # # # # # # # # > > > DATALOADER < < < # # # # # # # # #
dataloader:
  training:
    start: 2000-01-01
    end: 2000-01-31
  validation:
    start: 2000-01-01
    end: 2000-01-31
  test:
    dataset: null
# # # # # # # # # # < < < DATALOADER > > > # # # # # # # # #

# # # # # # # # # # > > > DIAGNOSTIC < < < # # # # # # # # #
diagnostics:
  plot:
    asynchronous: False
    format: svg
    folder: True
    parameters:
    - 100u
    - 100v
    - 2t
    - msl
    callbacks:
    - _target_: anemoi.training.diagnostics.callbacks.plot.GraphTrainableFeaturesPlot
    - _target_: anemoi.training.diagnostics.callbacks.plot.PlotLoss
      parameter_groups: {}
    - _target_: anemoi.training.diagnostics.callbacks.plot.PlotSample
      sample_idx: ${diagnostics.plot.sample_idx}
      parameters: ${diagnostics.plot.parameters}
      accumulation_levels_plot: []
      precip_and_related_fields: []
    - _target_: anemoi.training.diagnostics.callbacks.plot.PlotSpectrum
      sample_idx: ${diagnostics.plot.sample_idx}
      parameters: ${diagnostics.plot.parameters}
    - _target_: anemoi.training.diagnostics.callbacks.plot.PlotHistogram
      sample_idx: ${diagnostics.plot.sample_idx}
      precip_and_related_fields: []
      parameters: ${diagnostics.plot.parameters}
  log:
    wandb:
      entity: null
    mlflow:
      enabled: True
      offline: True
      tracking_uri: null
# # # # # # # # # # < < < DIAGNOSTIC > > > # # # # # # # # #

# # # # # # # # # # > > > HARDWARE < < < # # # # # # # # # #
hardware:
  paths:
    data: source/
    output: output/
  files:
    dataset: era.zarr
    graph: era.pt
# # # # # # # # # # < < < HARDWARE > > > # # # # # # # # # #

# # # # # # # # # # > > > GRAPHS < < < # # # # # # # # # # #
graph:
  nodes:
    hidden:
      node_builder:
        _target_: anemoi.graphs.nodes.HEALPixNodes
        resolution: 2
  edges:
  - source_name: ${graph.hidden}
    target_name: ${graph.hidden}
    edge_builders:
    - _target_: anemoi.graphs.edges.KNNEdges
      num_nearest_neighbours: 8
    attributes: ${graph.attributes.edges}
  - source_name: ${graph.hidden}
    target_name: ${graph.data}
    edge_builders:
    - _target_: anemoi.graphs.edges.KNNEdges
      num_nearest_neighbours: 3
    attributes: ${graph.attributes.edges}
# # # # # # # # # # < < < GRAPHS > > > # # # # # # # # # # #

# # # # # # # # # # > > > MODELS < < < # # # # # # # # # # #
model:
  num_channels: 32
  encoder:
    _target_: anemoi.models.layers.mapper.SFNO2HEALPixForwardMapper
  processor:
    num_layers: 4
    num_heads: 4
    window_size: 32
    attention_implementation: scaled_dot_product_attention
  trainable_parameters:
    data: 2
    hidden: 2
    data2hidden: 2
    hidden2data: 2
  normalization:
    target: torch.nn.utils.spectral_norm
    modules:
      Linear:
      - _target_: ${model.normalization.target}
      Conv1d:
      - _target_: ${model.normalization.target}
      Conv2d:
      - _target_: ${model.normalization.target}
  bounding: []
# # # # # # # # # # < < < MODELS > > > # # # # # # # # # # #

# # # # # # # # # # > > > TRAINING < < < # # # # # # # # # #
training:
  training_loss:
    _target_: anemoi.training.losses.spectral.SpectralLoss
    scalars: ['variable']
  variable_loss_scaling:
    pl: {}
    sfc: {}
  metrics: []
# # # # # # # # # # < < < TRAINING > > > # # # # # # # # # #
